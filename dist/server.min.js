"use strict";require("dotenv").config();var express=require("express"),mongoose=require("mongoose"),multer=require("multer"),path=require("path"),Ably=require("ably"),fs=require("fs"),app=express(),PORT=process.env.PORT||3e3;mongoose.connect(process.env.MONGODB_URI,{useNewUrlParser:!0,useUnifiedTopology:!0}).then(function(){return console.log("MongoDB connected")}).catch(function(e){return console.error("MongoDB connection error:",e)});var messageSchema=new mongoose.Schema({username:String,message:String,mediaUrl:String,timestamp:{type:Date,default:Date.now}}),Message=mongoose.model("Message",messageSchema),ably=new Ably.Realtime({key:process.env.ABLY_KEY}),channel=ably.channels.get("chat-channel");app.use(express.static("public")),app.use(express.json());var storage=multer.diskStorage({destination:function(e,r,s){s(null,"uploads/")},filename:function(e,r,s){s(null,Date.now()+path.extname(r.originalname))}}),upload=multer({storage:storage});fs.existsSync("uploads")||fs.mkdirSync("uploads"),app.post("/send-message",function(r,s){var n,a,t,o,c;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(n=r.body,a=n.username,t=n.message,o=n.mediaUrl,a&&(t||o)){e.next=3;break}return e.abrupt("return",s.status(400).send({error:"Username and either message or media are required"}));case 3:return c=new Message({username:a,message:t,mediaUrl:o}),e.prev=4,e.next=7,regeneratorRuntime.awrap(c.save());case 7:channel.publish("new-message",{username:a,message:t,mediaUrl:o,timestamp:c.timestamp}),s.status(200).send("Message sent"),e.next=15;break;case 11:e.prev=11,e.t0=e.catch(4),console.error("Error saving message:",e.t0),s.status(500).send({error:"Error saving message"});case 15:case"end":return e.stop()}},null,null,[[4,11]])}),app.post("/upload",upload.single("file"),function(e,r){if(!e.file)return r.status(400).send({error:"No file uploaded"});var s="/uploads/".concat(e.file.filename);r.json({mediaUrl:s})}),app.get("/messages",function(e,r){var s;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Message.find().sort({timestamp:1}));case 3:s=e.sent,r.json(s),e.next=11;break;case 7:e.prev=7,e.t0=e.catch(0),console.error("Error fetching messages:",e.t0),r.status(500).send({error:"Error fetching messages"});case 11:case"end":return e.stop()}},null,null,[[0,7]])}),app.delete("/messages",function(e,r){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Message.deleteMany({}));case 3:r.status(200).send("Chat cleared"),e.next=10;break;case 6:e.prev=6,e.t0=e.catch(0),console.error("Error clearing chat:",e.t0),r.status(500).send({error:"Error clearing chat"});case 10:case"end":return e.stop()}},null,null,[[0,6]])}),app.use("/uploads",express.static(path.join(__dirname,"uploads"))),app.listen(PORT,function(){console.log("Server is running on http://localhost:".concat(PORT))});
//# sourceMappingURL=server.min.js.map
